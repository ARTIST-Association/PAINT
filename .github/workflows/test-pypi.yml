name: Publish to TestPyPI

on:
  push:
    branches:
      [release-test]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build twine

    - name: Bump version for TestPyPI
      run: |
        BASE_VERSION=$(grep '^version =' pyproject.toml | cut -d '"' -f2)
        NEW_VERSION="${BASE_VERSION}-test${{ github.run_number }}"
        echo "Patching version to $NEW_VERSION"
        sed -i "s/^version = .*/version = \"$NEW_VERSION\"/" pyproject.toml

    - name: Build package
      run: python -m build

    - name: Publish package to TestPyPi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        verbose: true

  test-from-testpypi:
    needs: build-and-publish
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package from TestPyPI
        run: |
          pip install --extra-index-url https://test.pypi.org/simple/ "paint-test[dev]"
      - name: Test with pytest and coverage badge
        run: |
          python --version
          pytest --cov=paint
